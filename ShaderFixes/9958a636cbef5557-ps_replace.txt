// ---- Created with 3Dmigoto v1.3.14 on Sun Feb 03 21:51:46 2019
Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[129];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[21];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float2 v0 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cmp(1 < cb1[127].y);
  r0.y = 1.77777779 * cb1[127].y;
  r0.y = cb1[127].x / r0.y;
  r0.zw = v0.xy * cb1[128].xy + -cb1[126].xy;
  r1.yz = cb1[127].zw * r0.zw;
  r0.y = r1.y * r0.y;
  r1.x = r0.x ? r0.y : r1.y;
  r1.x -= 0.1719;
  r0.xy = cmp(r1.xz >= cb0[20].xy);
  r0.zw = cmp(cb0[20].zw >= r1.xz);
  r0.x = r0.z ? r0.x : 0;
  r0.x = r0.y ? r0.x : 0;
  r0.yz = cmp(r1.xz >= cb0[19].xy);
  r1.yw = cmp(cb0[19].zw >= r1.xz);
  r2.xyzw = t1.Sample(s0_s, r1.xz).xyzw;
  r0.y = r0.y ? r1.y : 0;
  r0.xy = r0.wz ? r0.xy : 0;
  r0.y = r1.w ? r0.y : 0;
  r0.x = (int)r0.y | (int)r0.x;
  r0.y = 1 + -r2.w;
  r1.xyzw = t0.Sample(s0_s, v0.xy).xyzw;
  r3.xyzw = r1.xyzw * r2.wwww;
  r3.xyzw = r0.yyyy * r3.xyzw + r2.xyzw;
  r0.y = 1 + -r1.w;
  r1.xyzw = r0.yyyy * r2.xyzw + r1.xyzw;
  o0.xyzw = r0.xxxx ? r3.xyzw : r1.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.14 on Sun Feb 03 21:51:46 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[129], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 4
lt r0.x, l(1.000000), cb1[127].y
mul r0.y, cb1[127].y, l(1.77777779)
div r0.y, cb1[127].x, r0.y
mad r0.zw, v0.xxxy, cb1[128].xxxy, -cb1[126].xxxy
mul r1.yz, r0.zzwz, cb1[127].zzwz
mul r0.y, r0.y, r1.y
movc r1.x, r0.x, r0.y, r1.y
ge r0.xy, r1.xzxx, cb0[20].xyxx
ge r0.zw, cb0[20].zzzw, r1.xxxz
and r0.x, r0.z, r0.x
and r0.x, r0.y, r0.x
ge r0.yz, r1.xxzx, cb0[19].xxyx
ge r1.yw, cb0[19].zzzw, r1.xxxz
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xzxx, t1.xyzw, s0
and r0.y, r0.y, r1.y
and r0.xy, r0.wzww, r0.xyxx
and r0.y, r1.w, r0.y
or r0.x, r0.y, r0.x
add r0.y, -r2.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v0.xyxx, t0.xyzw, s0
mul r3.xyzw, r2.wwww, r1.xyzw
mad r3.xyzw, r0.yyyy, r3.xyzw, r2.xyzw
add r0.y, -r1.w, l(1.000000)
mad r1.xyzw, r0.yyyy, r2.xyzw, r1.xyzw
movc o0.xyzw, r0.xxxx, r3.xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/