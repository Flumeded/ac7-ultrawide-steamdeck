// ---- Created with 3Dmigoto v1.3.14 on Thu Feb 21 20:52:12 2019
Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[137];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[26];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float2 v0 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = v0.xy * cb1[128].xy + -cb1[126].xy;
  r1.yz = cb1[127].zw * r0.xy;
  r0.x = cmp(1 < cb1[127].y);
  r0.z = 1.77777779 * cb1[127].y;
  r0.z = cb1[127].x / r0.z;
  r0.z = r1.y * r0.z;
  r1.x = r0.x ? r0.z : r1.y;
  r1.x -= 0.1719;
  r0.xzw = r1.zxz * float3(10,0.100000001,1) + float3(0.5,-2,-2);
  r0.x = floor(r0.x);
  r0.x = r1.z * 10 + -r0.x;
  r1.y = r0.x + r0.x;
  r0.x = -r0.x * 2 + abs(r1.y);
  r0.x = r0.x * 0.899999976 + r1.y;
  r0.x = -0.5 + r0.x;
  r0.x = 0.300000012 * r0.x;
  r2.xyz = float3(0.5,-0.5,-0.5) + r1.zxz;
  r1.y = floor(r2.x);
  r0.y = r0.y * cb1[127].w + -r1.y;
  r0.y = r0.y + r0.y;
  r0.y = -0.5 + abs(r0.y);
  r0.x = r0.y * r0.x;
  r0.x = 0.300000012 * r0.x;
  r1.yw = float2(1.5,0.600000024) * cb1[136].zz;
  r2.xw = r1.xz * float2(0.100000001,1) + r1.yw;
  r2.xw = frac(r2.xw);
  r2.xw = float2(26.1799393,26.1799393) * r2.xw;
  r2.xw = sin(r2.xw);
  r0.y = r2.x + r2.w;
  r0.x = r0.x * r0.y;
  sincos(r1.y, r2.x, r3.x);
  r4.x = -r2.x;
  r4.y = r3.x;
  r0.y = dot(r4.yx, r0.zw);
  r4.z = r2.x;
  r0.z = dot(r4.zy, r0.zw);
  r3.xyzw = frac(r0.yzyz);
  r3.xyzw = float4(31.4159279,31.4159279,26.1799393,26.1799393) * r3.xyzw;
  r0.yz = cos(r3.xy);
  r0.yz = r0.yz * float2(5,5) + float2(1,1);
  r0.yz = r0.yz * float2(0.5,0.5) + float2(0.5,0.5);
  r0.y = r0.y + r0.z;
  r0.x = r0.x * r0.y;
  r2.xw = sin(r3.zw);
  r2.xw = r2.xw * float2(0.00999999978,0.00999999978) + float2(1,1);
  r0.yw = float2(0.5,0.5);
  r2.xy = r2.xw * r2.yz + r0.xy;
  r2.z = 0.5 + r2.x;
  r0.xy = r2.zy + -r1.xz;
  r0.xy = saturate(cb0[24].ww * r0.xy + r1.xz);
  r2.xy = cmp(r1.xz >= cb0[22].xy);
  r2.zw = cmp(cb0[22].zw >= r1.xz);
  r2.x = r2.z ? r2.x : 0;
  r2.x = r2.y ? r2.x : 0;
  r2.yz = cmp(r0.xy >= cb0[22].xy);
  r3.xy = cmp(cb0[22].zw >= r0.xy);
  r2.y = r2.y ? r3.x : 0;
  r2.xy = r2.wz ? r2.xy : 0;
  r2.y = r3.y ? r2.y : 0;
  r2.xy = ~(int2)r2.xy;
  r2.x = r2.y ? r2.x : 0;
  r0.xy = r2.xx ? r0.xy : r1.xz;
  r1.x = cmp(0.5 < cb0[24].y);
  r2.yz = cmp(r0.xy >= cb0[19].xy);
  r3.xy = cmp(cb0[19].zw >= r0.xy);
  r1.z = r2.y ? r3.x : 0;
  r1.z = r2.z ? r1.z : 0;
  r1.z = r3.y ? r1.z : 0;
  r1.x = (int)r1.z | (int)r1.x;
  r3.xyzw = t0.Sample(s0_s, v0.xy).xyzw;
  r2.yzw = v0.yxy * float3(10,0.100000001,1) + float3(0.5,-2,-2);
  r1.z = floor(r2.y);
  r1.z = v0.y * 10 + -r1.z;
  r2.y = r1.z + r1.z;
  r1.z = -r1.z * 2 + abs(r2.y);
  r1.z = r1.z * 0.899999976 + r2.y;
  r1.z = -0.5 + r1.z;
  r1.z = 0.300000012 * r1.z;
  r5.xyz = float3(0.5,-0.5,-0.5) + v0.yxy;
  r2.y = floor(r5.x);
  r2.y = v0.y + -r2.y;
  r2.y = r2.y + r2.y;
  r2.y = -0.5 + abs(r2.y);
  r1.z = r2.y * r1.z;
  r1.yw = v0.xy * float2(0.100000001,1) + r1.yw;
  r1.yw = frac(r1.yw);
  r1.yzw = float3(26.1799393,0.300000012,26.1799393) * r1.yzw;
  r1.yw = sin(r1.yw);
  r1.y = r1.y + r1.w;
  r1.y = r1.z * r1.y;
  r1.z = dot(r4.yx, r2.zw);
  r1.w = dot(r4.zy, r2.zw);
  r4.xyzw = frac(r1.zwzw);
  r4.xyzw = float4(31.4159279,31.4159279,26.1799393,26.1799393) * r4.xyzw;
  r1.zw = cos(r4.xy);
  r1.zw = r1.zw * float2(5,5) + float2(1,1);
  r1.zw = r1.zw * float2(0.5,0.5) + float2(0.5,0.5);
  r1.z = r1.z + r1.w;
  r0.z = r1.y * r1.z;
  r1.yz = sin(r4.zw);
  r1.yz = r1.yz * float2(0.00999999978,0.00999999978) + float2(1,1);
  r4.xy = r1.yz * r5.yz + r0.zw;
  r4.z = 0.5 + r4.x;
  r0.zw = -v0.xy + r4.zy;
  r0.zw = saturate(cb0[24].ww * r0.zw + v0.xy);
  r4.xyzw = t1.Sample(s1_s, r0.zw).xyzw;
  if (r2.x == 0) {
    r4.xyzw = t1.Sample(s1_s, v0.xy).xyzw;
  }
  r0.z = dot(r3.xyz, float3(0.298911989,0.586610973,0.114477001));
  r0.z = saturate(1 + -r0.z);
  r1.yz = cmp(r0.xy >= cb0[20].xy);
  r0.xy = cmp(cb0[20].zw >= r0.xy);
  r0.x = r0.x ? r1.y : 0;
  r0.x = r1.z ? r0.x : 0;
  r0.x = r0.y ? r0.x : 0;
  r0.y = r0.x ? cb0[18].z : r0.z;
  r0.y = r1.x ? 1 : r0.y;
  r0.yz = cb0[18].xy * r0.yy;
  r0.w = cmp(-0.00999999978 < cb0[23].x);
  r1.yz = cb0[23].xx * r0.yz;
  r0.yz = r0.ww ? r1.yz : r0.yz;
  r1.yzw = t2.Sample(s2_s, v0.xy).xyz;
  r2.yzw = r1.yzw * r0.yyy;
  r0.w = saturate(dot(r2.yzw, float3(0.298911989,0.586610973,0.114477001)));
  r1.yzw = r1.yzw * r0.yyy + r4.xyz;
  r0.y = 1 + -r4.w;
  r0.y = r0.y * r0.w + r4.w;
  r2.yzw = r3.xyz * cb0[24].xxx + cb0[23].zzz;
  r0.w = cb1[127].y / cb1[127].x;
  r3.y = v0.y * r0.w;
  r3.x = v0.x;
  r3.xy = float2(40,40) * r3.xy;
  r0.w = t4.Sample(s4_s, r3.xy).w;
  r3.xyz = t3.Sample(s3_s, v0.xy).xyz;
  r3.xyz = r3.xyz * r0.zzz;
  r0.z = dot(r3.xyz, float3(0.298911989,0.586610973,0.114477001));
  r4.xyz = r3.xyz * r0.www;
  r4.xyz = float3(3,3,3) * r4.xyz;
  r0.z = saturate(r0.z + r0.z);
  r3.xyz = r4.xyz * r0.zzz + r3.xyz;
  r0.x = (int)r0.x | (int)r1.x;
  r4.xw = float2(2,2) * cb1[128].zw;
  r4.yz = float2(0,0);
  r5.xyzw = v0.xyxy + -r4.xyzw;
  r6.xyz = t1.Sample(s1_s, r5.xy).xyz;
  r4.xyzw = v0.xyxy + r4.xyzw;
  r7.xyz = t1.Sample(s1_s, r4.xy).xyz;
  r5.xyz = t1.Sample(s1_s, r5.zw).xyz;
  r4.xyz = t1.Sample(s1_s, r4.zw).xyz;
  if (r0.x != 0) {
    r0.x = 1 + -r0.y;
    r0.xzw = r2.yzw * r0.xxx + r1.yzw;
    r1.x = saturate(dot(r3.xyz, float3(0.298911989,0.586610973,0.114477001)));
    r1.x = 1 + -r1.x;
    r8.xyz = r0.xzw * r1.xxx + r3.xyz;
    r0.xzw = r2.xxx ? r0.xzw : r8.xyz;
  } else {
    r1.x = dot(r6.xyz, float3(0.298911989,0.586610973,0.114477001));
    r4.w = dot(r7.xyz, float3(0.298911989,0.586610973,0.114477001));
    r1.x = r4.w * r1.x;
    r4.w = dot(r5.xyz, float3(0.298911989,0.586610973,0.114477001));
    r1.x = r4.w * r1.x;
    r4.x = dot(r4.xyz, float3(0.298911989,0.586610973,0.114477001));
    r1.x = r4.x * r1.x;
    r0.y = -r0.y * cb0[25].x + 1;
    r1.yzw = cb0[23].www * r1.yzw;
    r1.x = r1.x * 10 + 1;
    r1.xyz = r1.yzw * r1.xxx;
    r1.xyz = r2.yzw * r0.yyy + r1.xyz;
    r2.yzw = r1.xyz + r3.xyz;
    r0.xzw = r2.xxx ? r1.xyz : r2.yzw;
  }
  o0.xyz = cb0[23].yyy * r0.xzw;
  o0.w = r3.w;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.14 on Thu Feb 21 20:52:12 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], immediateIndexed
dcl_constantbuffer cb1[137], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 9
mad r0.xy, v0.xyxx, cb1[128].xyxx, -cb1[126].xyxx
mul r1.yz, r0.xxyx, cb1[127].zzwz
lt r0.x, l(1.000000), cb1[127].y
mul r0.z, cb1[127].y, l(1.77777779)
div r0.z, cb1[127].x, r0.z
mul r0.z, r0.z, r1.y
movc r1.x, r0.x, r0.z, r1.y
mad r0.xzw, r1.zzxz, l(10.000000, 0.000000, 0.100000, 1.000000), l(0.500000, 0.000000, -2.000000, -2.000000)
round_ni r0.x, r0.x
mad r0.x, r1.z, l(10.000000), -r0.x
add r1.y, r0.x, r0.x
mad r0.x, -r0.x, l(2.000000), |r1.y|
mad r0.x, r0.x, l(0.900000), r1.y
add r0.x, r0.x, l(-0.500000)
mul r0.x, r0.x, l(0.300000)
add r2.xyz, r1.zxzz, l(0.500000, -0.500000, -0.500000, 0.000000)
round_ni r1.y, r2.x
mad r0.y, r0.y, cb1[127].w, -r1.y
add r0.y, r0.y, r0.y
add r0.y, |r0.y|, l(-0.500000)
mul r0.x, r0.x, r0.y
mul r0.x, r0.x, l(0.300000)
mul r1.yw, cb1[136].zzzz, l(0.000000, 1.500000, 0.000000, 0.600000)
mad r2.xw, r1.xxxz, l(0.100000, 0.000000, 0.000000, 1.000000), r1.yyyw
frc r2.xw, r2.xxxw
mul r2.xw, r2.xxxw, l(26.179939, 0.000000, 0.000000, 26.179939)
sincos r2.xw, null, r2.xxxw
add r0.y, r2.w, r2.x
mul r0.x, r0.y, r0.x
sincos r2.x, r3.x, r1.y
mov r4.x, -r2.x
mov r4.y, r3.x
dp2 r0.y, r4.yxyy, r0.zwzz
mov r4.z, r2.x
dp2 r0.z, r4.zyzz, r0.zwzz
frc r3.xyzw, r0.yzyz
mul r3.xyzw, r3.xyzw, l(31.415928, 31.415928, 26.179939, 26.179939)
sincos null, r0.yz, r3.xxyx
mad r0.yz, r0.yyzy, l(0.000000, 5.000000, 5.000000, 0.000000), l(0.000000, 1.000000, 1.000000, 0.000000)
mad r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
add r0.y, r0.z, r0.y
mul r0.x, r0.y, r0.x
sincos r2.xw, null, r3.zzzw
mad r2.xw, r2.xxxw, l(0.010000, 0.000000, 0.000000, 0.010000), l(1.000000, 0.000000, 0.000000, 1.000000)
mov r0.yw, l(0,0.500000,0,0.500000)
mad r2.xy, r2.xwxx, r2.yzyy, r0.xyxx
add r2.z, r2.x, l(0.500000)
add r0.xy, -r1.xzxx, r2.zyzz
mad_sat r0.xy, cb0[24].wwww, r0.xyxx, r1.xzxx
ge r2.xy, r1.xzxx, cb0[22].xyxx
ge r2.zw, cb0[22].zzzw, r1.xxxz
and r2.x, r2.z, r2.x
and r2.x, r2.y, r2.x
ge r2.yz, r0.xxyx, cb0[22].xxyx
ge r3.xy, cb0[22].zwzz, r0.xyxx
and r2.y, r2.y, r3.x
and r2.xy, r2.wzww, r2.xyxx
and r2.y, r3.y, r2.y
not r2.xy, r2.xyxx
and r2.x, r2.y, r2.x
movc r0.xy, r2.xxxx, r0.xyxx, r1.xzxx
lt r1.x, l(0.500000), cb0[24].y
ge r2.yz, r0.xxyx, cb0[19].xxyx
ge r3.xy, cb0[19].zwzz, r0.xyxx
and r1.z, r2.y, r3.x
and r1.z, r2.z, r1.z
and r1.z, r3.y, r1.z
or r1.x, r1.z, r1.x
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v0.xyxx, t0.xyzw, s0
mad r2.yzw, v0.yyxy, l(0.000000, 10.000000, 0.100000, 1.000000), l(0.000000, 0.500000, -2.000000, -2.000000)
round_ni r1.z, r2.y
mad r1.z, v0.y, l(10.000000), -r1.z
add r2.y, r1.z, r1.z
mad r1.z, -r1.z, l(2.000000), |r2.y|
mad r1.z, r1.z, l(0.900000), r2.y
add r1.z, r1.z, l(-0.500000)
mul r1.z, r1.z, l(0.300000)
add r5.xyz, v0.yxyy, l(0.500000, -0.500000, -0.500000, 0.000000)
round_ni r2.y, r5.x
add r2.y, -r2.y, v0.y
add r2.y, r2.y, r2.y
add r2.y, |r2.y|, l(-0.500000)
mul r1.z, r1.z, r2.y
mad r1.yw, v0.xxxy, l(0.000000, 0.100000, 0.000000, 1.000000), r1.yyyw
frc r1.yw, r1.yyyw
mul r1.yzw, r1.yyzw, l(0.000000, 26.179939, 0.300000, 26.179939)
sincos r1.yw, null, r1.yyyw
add r1.y, r1.w, r1.y
mul r1.y, r1.y, r1.z
dp2 r1.z, r4.yxyy, r2.zwzz
dp2 r1.w, r4.zyzz, r2.zwzz
frc r4.xyzw, r1.zwzw
mul r4.xyzw, r4.xyzw, l(31.415928, 31.415928, 26.179939, 26.179939)
sincos null, r1.zw, r4.xxxy
mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 5.000000, 5.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
add r1.z, r1.w, r1.z
mul r0.z, r1.z, r1.y
sincos r1.yz, null, r4.zzwz
mad r1.yz, r1.yyzy, l(0.000000, 0.010000, 0.010000, 0.000000), l(0.000000, 1.000000, 1.000000, 0.000000)
mad r4.xy, r1.yzyy, r5.yzyy, r0.zwzz
add r4.z, r4.x, l(0.500000)
add r0.zw, r4.zzzy, -v0.xxxy
mad_sat r0.zw, cb0[24].wwww, r0.zzzw, v0.xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.zwzz, t1.xyzw, s1
if_z r2.x
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v0.xyxx, t1.xyzw, s1
endif
dp3 r0.z, r3.xyzx, l(0.298912, 0.586611, 0.114477, 0.000000)
add_sat r0.z, -r0.z, l(1.000000)
ge r1.yz, r0.xxyx, cb0[20].xxyx
ge r0.xy, cb0[20].zwzz, r0.xyxx
and r0.x, r0.x, r1.y
and r0.x, r1.z, r0.x
and r0.x, r0.y, r0.x
movc r0.y, r0.x, cb0[18].z, r0.z
movc r0.y, r1.x, l(1.000000), r0.y
mul r0.yz, r0.yyyy, cb0[18].xxyx
lt r0.w, l(-0.010000), cb0[23].x
mul r1.yz, r0.yyzy, cb0[23].xxxx
movc r0.yz, r0.wwww, r1.yyzy, r0.yyzy
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v0.xyxx, t2.wxyz, s2
mul r2.yzw, r0.yyyy, r1.yyzw
dp3_sat r0.w, r2.yzwy, l(0.298912, 0.586611, 0.114477, 0.000000)
mad r1.yzw, r1.yyzw, r0.yyyy, r4.xxyz
add r0.y, -r4.w, l(1.000000)
mad r0.y, r0.y, r0.w, r4.w
mad r2.yzw, r3.xxyz, cb0[24].xxxx, cb0[23].zzzz
div r0.w, cb1[127].y, cb1[127].x
mul r3.y, r0.w, v0.y
mov r3.x, v0.x
mul r3.xy, r3.xyxx, l(40.000000, 40.000000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v0.xyxx, t3.xyzw, s3
mul r3.xyz, r0.zzzz, r3.xyzx
dp3 r0.z, r3.xyzx, l(0.298912, 0.586611, 0.114477, 0.000000)
mul r4.xyz, r0.wwww, r3.xyzx
mul r4.xyz, r4.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
add_sat r0.z, r0.z, r0.z
mad r3.xyz, r4.xyzx, r0.zzzz, r3.xyzx
or r0.x, r0.x, r1.x
mul r4.xw, cb1[128].zzzw, l(2.000000, 0.000000, 0.000000, 2.000000)
mov r4.yz, l(0,0,0,0)
add r5.xyzw, -r4.xyzw, v0.xyxy
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t1.xyzw, s1
add r4.xyzw, r4.xyzw, v0.xyxy
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r4.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.zwzz, t1.xyzw, s1
if_nz r0.x
  add r0.x, -r0.y, l(1.000000)
  mad r0.xzw, r2.yyzw, r0.xxxx, r1.yyzw
  dp3_sat r1.x, r3.xyzx, l(0.298912, 0.586611, 0.114477, 0.000000)
  add r1.x, -r1.x, l(1.000000)
  mad r8.xyz, r0.xzwx, r1.xxxx, r3.xyzx
  movc r0.xzw, r2.xxxx, r0.xxzw, r8.xxyz
else
  dp3 r1.x, r6.xyzx, l(0.298912, 0.586611, 0.114477, 0.000000)
  dp3 r4.w, r7.xyzx, l(0.298912, 0.586611, 0.114477, 0.000000)
  mul r1.x, r1.x, r4.w
  dp3 r4.w, r5.xyzx, l(0.298912, 0.586611, 0.114477, 0.000000)
  mul r1.x, r1.x, r4.w
  dp3 r4.x, r4.xyzx, l(0.298912, 0.586611, 0.114477, 0.000000)
  mul r1.x, r1.x, r4.x
  mad r0.y, -r0.y, cb0[25].x, l(1.000000)
  mul r1.yzw, r1.yyzw, cb0[23].wwww
  mad r1.x, r1.x, l(10.000000), l(1.000000)
  mul r1.xyz, r1.xxxx, r1.yzwy
  mad r1.xyz, r2.yzwy, r0.yyyy, r1.xyzx
  add r2.yzw, r3.xxyz, r1.xxyz
  movc r0.xzw, r2.xxxx, r1.xxyz, r2.yyzw
endif
mul o0.xyz, r0.xzwx, cb0[23].yyyy
mov o0.w, r3.w
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
